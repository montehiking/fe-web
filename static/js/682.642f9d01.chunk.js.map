{"version":3,"file":"static/js/682.642f9d01.chunk.js","mappings":"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","sources":["components/atoms/Button/index.tsx","components/organisms/ExportButton/kml.ts","webpack://montehiking/./src/components/organisms/ExportButton/styles.module.css?b513","components/organisms/ExportButton/index.tsx"],"sourcesContent":["/**\n * https://ant.design/components/button/\n */\nimport ButtonAnt, { ButtonProps } from 'antd/lib/button';\nimport { useIntl } from 'react-intl';\n\nimport { MsgProps, msg } from 'src/i18n/Msg';\n\ntype Props = Omit<ButtonProps, 'children'> & {\n  text: MsgProps;\n};\n\nexport const Button: React.FC<Props> = ({ text, ...props }) => {\n  const intl = useIntl();\n\n  return <ButtonAnt {...props}>{msg(intl, text)}</ButtonAnt>;\n};\n","import { createElement } from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport { MapState } from 'src/types';\n\ntype Provider = 'mapsme' | 'organicmaps';\n\nconst xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n\nconst providerToDomain: Record<Provider, string> = {\n  mapsme: 'maps.me',\n  organicmaps: 'omaps.app',\n};\n\nexport const renderFile = (\n  provider: 'mapsme' | 'organicmaps',\n  mapState: MapState\n): string => {\n  const backup = console.error;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  console.error = (...args: any[]) => {\n    if (args[0].includes('Use PascalCase')) {\n      return;\n    }\n    backup.call(console, ...args);\n  };\n\n  const placemarkStyles = ['placemark-red', 'placemark-yellow'].map((id) =>\n    createElement('Style', {\n      id,\n      key: id,\n      children: createElement('IconStyle', {\n        children: createElement('Icon', {\n          children: createElement('href', {\n            children: `https://${providerToDomain[provider]}/placemarks/${id}.png`,\n          }),\n        }),\n      }),\n    })\n  );\n\n  const lineStyles = [\n    // KML colors\n    { id: 'line-blue', color: 'ffff9018' },\n    { id: 'line-yellow', color: 'ff00ccff' },\n  ].map(({ id, color }) =>\n    createElement('Style', {\n      id,\n      key: id,\n      children: createElement('LineStyle', {\n        children: [\n          createElement('color', { children: color }),\n          createElement('width', { children: 4 }),\n        ],\n      }),\n    })\n  );\n\n  const name = createElement('name', { children: 'MonteHiking' });\n  const visibility = createElement('visibility', { children: '1' });\n\n  const extendedData = createElement('ExtendedData', {\n    'xmlns:mwm': `https://${providerToDomain[provider]}`,\n    children: [\n      createElement('mwm:name', {\n        children: createElement('mwm:lang', {\n          code: 'default',\n          children: 'MonteHiking',\n        }),\n      }),\n      createElement('mwm:annotation'),\n      createElement('mwm:description'),\n      createElement('mwm:lastModified', { children: new Date().toISOString() }),\n      createElement('mwm:accessRules', { children: 'Local' }),\n    ],\n  });\n\n  const points = mapState.points.map(({ geometry, properties }) => {\n    const coordinates = geometry.coordinates.join();\n    const style = properties.notVerified ? 'placemark-yellow' : 'placemark-red';\n\n    return createElement('Placemark', {\n      key: coordinates,\n      children: [\n        createElement('name', { children: properties.name }),\n        createElement('description', {\n          children: properties.description,\n        }),\n        createElement('styleUrl', { children: `#${style}` }),\n        createElement('Point', {\n          children: createElement('coordinates', { children: coordinates }),\n        }),\n      ],\n    });\n  });\n\n  const routes = mapState.routes.map(({ geometry, properties }) => {\n    const style = properties.notVerified ? 'line-yellow' : 'line-blue';\n\n    return createElement('Placemark', {\n      key: geometry.coordinates[0].join() + properties.name,\n      children: [\n        createElement('name', { children: properties.name }),\n        createElement('description', {\n          children: properties.description,\n        }),\n        createElement('styleUrl', { children: `#${style}` }),\n        createElement('LineString', {\n          children: [\n            createElement('tessellate', { children: 1 }),\n            createElement('coordinates', {\n              children: geometry.coordinates\n                .map((coords) => coords.join())\n                .join(' '),\n            }),\n          ],\n        }),\n      ],\n    });\n  });\n\n  const xmlDoc = createElement('kml', {\n    xmlns: 'http://earth.google.com/kml/2.2',\n    children: createElement('Document', {\n      children: [\n        ...placemarkStyles,\n        ...lineStyles,\n        name,\n        visibility,\n        extendedData,\n        points,\n        routes,\n      ],\n    }),\n  });\n\n  const result = renderToStaticMarkup(xmlDoc);\n\n  console.error = backup;\n\n  return xml + result;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__kDw2O\",\"buttons\":\"styles_buttons__GDQ+Q\",\"p\":\"styles_p__UxwU8\"};","import { DownloadOutlined } from '@ant-design/icons';\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\nimport React from 'react';\n\nimport { Button } from 'src/components/atoms/Button';\nimport { renderFile } from 'src/components/organisms/ExportButton/kml';\nimport { Msg } from 'src/i18n/Msg';\nimport { MapState } from 'src/types';\n\nimport styles from 'src/components/organisms/ExportButton/styles.module.css';\n\ntype Props = {\n  mapState: MapState;\n};\n\nconst buttonProps = {\n  icon: <DownloadOutlined />,\n  type: 'primary',\n  style: { minWidth: 110, margin: 5 },\n} as const;\n\nconst ExportButton: React.FC<Props> = ({ mapState }) => {\n  const disabled = mapState.routes.length + mapState.points.length === 0;\n\n  const exportKMZ = () => {\n    const zip = new JSZip();\n\n    zip\n      .file('MonteHiking.kml', renderFile('mapsme', mapState))\n      .generateAsync({\n        type: 'blob',\n        compression: 'DEFLATE',\n        compressionOptions: { level: 9 },\n      })\n      .then((content) => saveAs(content, 'MonteHiking.kmz'));\n  };\n\n  const exportGeoJson = () => {\n    const data = {\n      type: 'FeatureCollection',\n      name: 'MonteHiking',\n      features: [...mapState.routes, ...mapState.points].map((item) => ({\n        ...item,\n        properties: {\n          name: item.properties.name,\n          description: item.properties.description,\n          ...(item.properties.category === 'routes'\n            ? { stroke: item.properties.notVerified ? 'yellow' : 'blue' }\n            : { fill: item.properties.notVerified ? 'yellow' : 'red' }),\n        },\n      })),\n    };\n\n    const content = new Blob([JSON.stringify(data)], {\n      type: 'text/json;charset=utf-8',\n    });\n\n    saveAs(content, 'MonteHiking.geojson');\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.p}>\n        <Msg id=\"components.organisms.ExportButton.text\" />\n      </p>\n\n      <div className={styles.buttons}>\n        <Button\n          {...buttonProps}\n          disabled={disabled}\n          onClick={exportGeoJson}\n          text={{ id: 'components.organisms.ExportButton.geojson' }}\n        />\n        <Button\n          {...buttonProps}\n          disabled={disabled}\n          onClick={exportKMZ}\n          text={{ id: 'components.organisms.ExportButton.kmz' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ExportButton;\n"],"names":["Button","text","props","intl","useIntl","msg","providerToDomain","mapsme","organicmaps","buttonProps","icon","DownloadOutlined","type","style","minWidth","margin","mapState","disabled","routes","length","points","className","styles","Msg","id","onClick","data","name","features","map","item","properties","description","category","stroke","notVerified","fill","content","Blob","JSON","stringify","saveAs","JSZip","file","provider","backup","console","error","args","includes","call","placemarkStyles","createElement","key","children","lineStyles","color","visibility","extendedData","code","Date","toISOString","geometry","coordinates","join","coords","xmlDoc","xmlns","result","renderToStaticMarkup","renderFile","generateAsync","compression","compressionOptions","level","then"],"sourceRoot":""}